name: K8s Test

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  pull_request:
  workflow_dispatch:

jobs:
  k8s-test:
    name: k8s-test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # add "v1.25.0" after integration is fixed
        K8S_VERSION: [ "v1.22.0", "v1.23.0",  "v1.24.0", "v1.25.0" ]
    env:
      GO_VERSION: "1.19.0"
      MINIKUBE_VERSION: v1.28.0

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache go dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}

      - name: Cache kubectl
        uses: actions/cache@v3
        with:
          path: /tmp/kubectl
          key: v1-kubectl-binary-${{ matrix.K8S_VERSION }}

      - name: Download kubectl
        run: |
          if [[ ! -e "/tmp/kubectl" ]]; then
            wget -q -O "/tmp/kubectl" https://storage.googleapis.com/kubernetes-release/release/${{ matrix.K8S_VERSION }}/bin/linux/amd64/kubectl
          fi
          sudo install /tmp/kubectl /usr/local/bin/kubectl
          sudo chmod a+x /usr/local/bin/kubectl

      - name: Cache minikube
        uses: actions/cache@v3
        with:
          path: /tmp/minikube
          key: v1-minikube-binary-${{ env.MINIKUBE_VERSION }}

      - name: Download minikube
        run: |
          if [[ ! -e "/tmp/minikube" ]]; then
            wget -q -O "/tmp/minikube" https://storage.googleapis.com/minikube/releases/${{ env.MINIKUBE_VERSION }}/minikube-linux-amd64
          fi
          sudo install /tmp/minikube /usr/local/bin/minikube
          sudo chmod a+x /usr/local/bin/minikube
          sudo sysctl fs.protected_regular=0

      - name: Start Minikube
        run: |
          minikube start --container-runtime=docker --cpus 2 --memory 4096 --kubernetes-version=${{ matrix.K8S_VERSION }} --no-vtx-check
          export JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'
          until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
            sleep 1;
          done

      - name: Run test
        run: make test
