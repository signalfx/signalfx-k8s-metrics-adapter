---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: nginx
  name: webservers
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: webservers
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: webservers
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: 150m
            memory: 322122547200m
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: nginx-conf
        name: nginx-conf

---
apiVersion: v1
kind: Service
metadata:
  name: webservers
spec:
  ports:
  - name: 80-80
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: webservers
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: v1
data:
  default.conf: |
    # limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    server {
      listen 80;
      server_name  localhost;
      location /nginx_status {
        stub_status on;
        access_log off;
        allow all;
      }

      location /test {
        return 200 'testing';
        add_header Content-Type text/plain;
      }
    }
kind: ConfigMap
metadata:
  name: nginx-conf
